// Ports Declaration
input'1 CLK
input'8 instruction
input'8 operand
output'8 data_out
output'8 pc_out

// Registers
reg'8 A
reg'8 B
reg'8 PC
reg'8 IR
reg'1 CF

// Constants
const NOP = 0x0
const LDA = 0x01
const ADD = 0x02
const SUB = 0x03
const STA = 0x04
const LDI = 0x05
const JMP = 0x06
const JC = 0x07
const JZ = 0x08
const OUT = 0x09

// Startup block
startup
    PC = 0
    A = 0
    B = 0
end

// On Rising Edge
when CLK
    // Fetch instruction
    IR = instruction

	// Reset Outputs
	data_out = 0b
	pc_out = 0b

    // Decode and execute instruction
    if IR == LDA
        A '= operand
    end

    if (IR == ADD)
		local $sum = A + operand
	
		// Check for overflow
		if ($sum > 0xFF)
			CF = 1 
		else
			CF = 0
		end

		A = ($sum)'8
    end

    if (IR == SUB)
        A '= A - operand
    end

    if (IR == STA)
        data_out '= A
    end

    if (IR == LDI)
        B '= operand
    end

    if (IR == JMP)
        PC '= operand
    end

    if (IR == JC & CF)
        PC '= operand
    end

    if (IR == JZ & A == 0)
		PC '= operand
    end

    if (IR == OUT)
        data_out '= A
    end

    // Increment program counter
    PC '= PC + 1

	pc_out = PC
end
