// [NAME] 8b CPU v3
// A fully reactive & single data byte incorporated CPU
input'1         IN_CLK
input'1         IN_RESET
input'8         IN_BYTE

output'8        OUT_BYTE
output'8        OUT_SERIAL
output'2        OUT_RWA_RAM
output'2        OUT_RWA_PRAM

const RWA_NONE   =   00b
const RWA_READ   =   01b
const RWA_WRITE  =   10b
const RWA_ASSIGN =   11b

reg'8           A
reg'8           B
reg'8           PC
reg'8           INSTRUCTION
reg'8           OPERAND
reg'4           MICRO_PC
reg'8           FLAGS
reg'1           LAST_CLK

const NOP   =   0x00
const LDA   =   0x01
const LDB   =   0x02
const LDIA  =   0x03
const LDIB  =   0x04
const ADD   =   0x05
const SUB   =   0x06
const ADDI  =   0x07
const SUBI  =   0x08
const JMP   =   0x09
const JGT   =   0x0A
const JLT   =   0x0B
const JEQ   =   0x0C
const JNEQ  =   0x0D
const JC    =   0x0E
const JZ    =   0x0F
const OUT   =   0x10
const OUTI  =   0x11
const STA   =   0x12
const STB   =   0x13
const SER   =   0x14

when (IN_CLK) & (!LAST_CLK)
    local $stepPC'2 = 0
    if (MICRO_PC == 0)
        OUT_BYTE '= PC
        OUT_RWA_PRAM '= RWA_READ
    else if (MICRO_PC == 1)
        INSTRUCTION '= IN_BYTE
        OUT_RWA_PRAM '= RWA_WRITE
    else if (MICRO_PC == 2)
        OPERAND '= IN_BYTE
        OUT_RWA_PRAM '= RWA_NONE
        OUT_BYTE '= 0
    else 
        local $MICRO_STEP'4 = MICRO_PC - 3
        local $INS'8 = INSTRUCTION
        local $OP'8 = OPERAND
        if ($INS == SER)
            OUT_SERIAL '= $OP
            $stepPC '= 1
        else if (($INS == LDA) | ($INS == LDB))
            if ($MICRO_STEP == 0)
                OUT_BYTE '= $OP
                OUT_RWA_RAM '= RWA_ASSIGN
            else if ($MICRO_STEP == 1)
                OUT_RWA_RAM '= RWA_READ
            else if ($MICRO_STEP == 2)
                if ($INS == LDA)
                    A '= IN_BYTE
                else
                    B '= IN_BYTE
                end
                OUT_BYTE '= 0
                OUT_RWA_RAM '= RWA_NONE
                $stepPC '= 1
            end
        else if (($INS == LDIA) | ($INS == LDIB))
            if ($INS == LDIA)
                A '= $OP
            else
                B '= $OP
            end
            $stepPC '= 1
        else if (($INS == ADD) | ($INS == ADDI))
            local $sum'9 = A + (($INS == ADD) ? B : $OP)
            if ($sum > 0xFF)
                FLAGS '= FLAGS | 1b
            else
                FLAGS '= FLAGS & 0b
            end
            if ($sum == 0x0)
                FLAGS '= FLAGS | 10b
            else
                FLAGS '= FLAGS & 01b
            end
            A '= ($sum)'8
            $stepPC '= 1
        else if (($INS == SUB) | ($INS == SUBI))
            A '= A - (($INS == SUB) ? B : $OP)
            $stepPC '= 1
        else if (($INS == JMP) | ($INS == JGT) | ($INS == JLT) | ($INS == JEQ) | ($INS == JNEQ) | ($INS == JC) | ($INS == JZ))
            local $canJump = (
                ($INS == JMP) ? (1b) : (
                    ($INS == JGT) ? (A > B) : (
                        ($INS == JLT) ? (A < B) : (
                            ($INS == JEQ) ? (A == B) : (
                                ($INS == JNEQ) ? (A != B) : (
                                    ($INS == JC) ? (FLAGS & 1b) : (
                                        ($INS == JZ) ? (FLAGS & 10b) : (0b))))))))
            if ($canJump)
                PC '= $OP 
                $stepPC '= 2
            else
                $stepPC '= 1
            end
        else if (($INS == OUT) | ($INS == OUTI))
            local $outData'8 = ($INS == OUTI ? ($OP) : (($OP == 0b) ? A : B))
            OUT_SERIAL '= $outData
            $stepPC '= 1
        else if (($INS == STA) | ($INS == STB))
            if ($MICRO_STEP == 0)
                OUT_BYTE '= $OP
                OUT_RWA_RAM '= RWA_ASSIGN
            else if ($MICRO_STEP == 1)
                OUT_RWA_RAM '= RWA_NONE
            else if ($MICRO_STEP == 2)
                OUT_BYTE '= (($INS == STA) ? A : B)
                OUT_RWA_RAM '= RWA_WRITE
            else if ($MICRO_STEP == 3)
                OUT_BYTE '= 0
                OUT_RWA_RAM '= RWA_NONE
                $stepPC '= 1
            end
        else 
            // NOP
            $stepPC '= 1
        end
    end

    if ($stepPC == 2)
        MICRO_PC '= 0
    else if ($stepPC == 1)
        PC '= PC + 1
        MICRO_PC '= 0
    else if ($stepPC == 0)
        MICRO_PC '= MICRO_PC + 1
    end
end

when IN_RESET
    OUT_BYTE '= 0
    OUT_SERIAL '= 0
    OUT_RWA_RAM '= 0
    OUT_RWA_PRAM '= 0
    A '= 0
    B '= 0
    PC '= 0
    INSTRUCTION '= 0
    OPERAND '= 0
    MICRO_PC '= 0
    FLAGS '= 0
    LAST_CLK '= 0
end
when *
    LAST_CLK = IN_CLK
end